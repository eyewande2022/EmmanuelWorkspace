At the start of the LEMP project i successfully launched an instance  of IPV4 address 3.86.42.22 and successful launched the ssh for lempproject2.pem  into the git bash.Here are the steps done . for each details stack .

LINUX  NGINX  MYSQL   PHP 

LINUX STEPS:::

1) Create Instances and connect to your local machine 
CREATE AN ACCOUNT WITH AWS
CREATE AN INSTANCE AND GIVE IT A NAME 
CHOOSE THE OS IMAGE AND A FREE TIER IMAGE THAT IS REQUIRED
CHOOSE THE INSTANCE TYPE 
CHOOSE A KEY PAIR LOGIN WHICH YOU WOULD NEED TO ACHIEVE THE LAUNCH TO YOUR LOCAL MACHINE LATER CHOOSE THE .PEM  pair  format
SELECT EXISTING SECURITY GROUP 
ALLOW SSH AND CHOOSE A REASONABLY FREE TIER MEMORY 
THEN LAUNCH IT AND GET TO THE INSTANCE DASHBOARD 
REFRESH TO KEEP IT RUNNING AND ALSO MAKE SURE IT PASSES STATUS AND ALSO VIEW THE VPN ASSIGNED
CLICK THE PROJECT 1 INSTANCE 

2) SYNCING WITH LOCAL MACHINE TO BEGIN OPERATION BY USING GIT BASH:
USE LINUX TO CHANGE DIRECTORY TO DOWNLOADS  (cd downloads) .
ONCE THERE , PASTE YOUR SSH GOTTEN FROM THE AWS INSTANCE 
AND THEN IT AUTOMATICALLY CONNECTS TO YOUR SYSTEM 


ssh -i "projectlemp2.pem" ubuntu@ec2-3-90-229-187.compute-1.amazonaws.com


97  ~ssh -i "lempproject2.pem" ubuntu@ec2-3-86-42-22.compute-1.amazonaws.com
   98  ~ssh -i "lempproject2.pem" ubuntu@3.86.42.22
   99  ~ssh -i lempproject2.pem ubuntu@3.86.42.22
  100  ~ssh -i lempproject2.pem ubuntu@ec2-3-86-42-22
  101  ls
  102  cd downloads
  103  ~ssh -i "lempproject2.pem" ubuntu@ec2-3-86-42-22.compute-1.amazonaws.com
  104  ls
  105  cd ..
  106  cd Downloads
  107  ls
  108  ~ssh -i "lempproject2.pem" ubuntu@ec2-3-86-42-22.compute-1.amazonaws.com
  109  ~ssh -i lempproject2.pem ubuntu@ec2-3-86-42-22
  110  ~ssh -i "lempproject2.pem" ubuntu@ec2-3-86-42-22.compute-1.amazonaws.com
  111  clear
  112  ~ssh -i "lempproject2.pem" ubuntu@ec2-3-86-42-22.compute-1.amazonaws.com
  113  ssh -i "lempproject2.pem" ubuntu@ec2-3-86-42-22.compute-1.amazonaws.com
  114  sudo vim /etc/nginx/sites-available/projectLEMP
  115  sudo vim /etc/nginx/sites-available/projectLEMP
  116  sudo nano /etc/nginx/sites-available/projectLEMP
  117  cd Downloads
  118  ssh -i "lempproject2.pem" ubuntu@ec2-3-86-42-22.compute-1.amazonaws.com
  119  cd downloads
  120  ls
  121  ssh -i "lempproject2.pem" ubuntu@ec2-3-86-42-22.compute-1.amazonaws.com
  122  ls
  123  clear
  124  history -a && history -r
  125  history



:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

NGINX :::::::::::::::::::::::::::::::::
Install NGINX  
using Ubuntu’s package manager ‘apt’:

sudo apt update              (to update ) 
sudo apt install nginx     ( to install nginx)
sudo systemctl statusnginx   (to verify nginx status if downloaded successfully )

Next step :
Change inbound rule in the security groups by adding a new rule 

ENSURE TO "SELECT   HTTP" 
PORT SHOULD BE 80 
CHANGE "Custom to ANYWHERE "   AND SAVE THE RULE 



 curl http://localhost:80
CHECK ON THE GIT BASH TERMINAL IF THE RESPONSE SHOWS THE PAGE CHANGES BY THE DATA IT PROVIDES 
PROCEEDS 

Use this command to check the IPADDRESS FROM YOUR TERMINAL 
curl -s http://169.254.169.254/latest/meta-data/public-ipv4



LAUNCH ON WEB BROWSER TO DISPLAY :  http://3.90.229.187:80
FINAL DESTINATION:  NGINX DEFAULT PAGE DISPLAYS


:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

MYSQL:::::::::::::::::::::::::::::::::PROCEED TO INSTALLING AND CREATING YOUR DATABASE

sudo apt install mysql-server            (Install mysql server and  TYPE YES AND ENTER) 
sudo mysql                               (connect to the MYSQL server and show you details )

After installlation confirmed ,we should endeavour to run the "ALTER" script to get a password for the root user using  

ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'PassWord.1';

mysql> exit   (Exit the MySQL shell)


CONFIRM THE PASSWORD AGAIN   $ sudo mysql -p

once you get access and confirm you have the right password .exit from my SQL

mysql> exit   (Exit the MySQL shell)


Use this command to check the status of MYSQL
sudo systemctl status mysql  (TO CHECK IF MY SQL SERVER IS RUNNING )



:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

PHP:::::::::::::::::::::::::::::::::PROCESS CODE TO DISPLAY DYNAMIC CONTENT TO THE END USER  
Installing 2 packages at once (php-fpm    php-mysql)

sudo apt install php-fpm php-mysql
Click Y and press enter to confirm installation.

Use this to confirm the version 

php -v   (php version)

ONCE VERSION IS DONE      LAMP STACK HAS BEEN COMPLETELY INSTALLED 

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

Step 4 — Configuring Nginx to Use PHP Processor


Webroot was created using 

sudo mkdir /var/www/projectLEMP  (create webroot)

sudo chown -R $USER:$USER /var/www/projectLEMP   (assign ownership of the directory with the $USER environment variable)

Used Vim editor because it wors fine for me 
sudo vim /etc/nginx/sites-available/projectLEMP   (USED VIM EDITOR to type in the bare-bone config


This will create a new blank file. Paste in the following bare-bones configuration:

#/etc/nginx/sites-available/projectLEMP

server {
    listen 80;
    server_name projectLEMP www.projectLEMP;
    root /var/www/projectLEMP;

    index index.html index.htm index.php;

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
     }

    location ~ /\.ht {
        deny all;
    }

}


Activate your configuration by linking to the config file from Nginx’s sites-enabled directory:

sudo ln -s /etc/nginx/sites-available/projectLEMP /etc/nginx/sites-enabled/


This will tell Nginx to use the configuration next time it is reloaded. You can test your configuration for syntax errors by typing:

sudo nginx -t
You shall see following message:

nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful


Proceed to the next commanf


sudo unlink /etc/nginx/sites-enabled/default   (Disable default Nginx host that is currently configured to listen on port 80, for this run:)


sudo systemctl reload nginx          (When you are ready, reload Nginx to apply the changes:)


sudo echo 'Hello LEMP from hostname' $(curl -s http://169.254.169.254/latest/meta-data/public-hostname) 'with public IP' $(curl -s http://169.254.169.254/latest/meta-data/public-ipv4) > /var/www/projectLEMP/index.html
Now go to your browser and try to open your website URL using IP address:

http://<Public-IP-Address>:80
http://3.86.42.22:80

Website is successfully  displayed ##

'Hello LEMP from hostname  public-hostname 'with public IP'is displayed 
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

STEP 5 TESTING PHP WITH NGINX

sudo vim /var/www/projectLEMP/info.php  (create a document root  and open with a vim editor)


inputing the PHP code 

<?php
phpinfo();

http://3.90.229.187/info.php


All completely viewed 

Dont forget to remove this as you can recover it back later

sudo rm /var/www/your_domain/info.php



:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

STEP 6 – RETRIEVING DATA FROM MYSQL DATABASE WITH PHP (CONTINUED)
To login into the mysql server 
sudo mysql -p
enter your password that you created earlier 



First, connect to the MySQL console using the root account:

sudo mysql  (To create a new database, run the following command from your MySQL console:)

mysql> CREATE DATABASE `example_database`;   (create new data base)

As for me ,due to many errors ,I ended up creating these details but with alot of back and forth .I now understand the full concept on password
PLEASE NOTE YOU CREATED with this details 
example_database
example_user2     
and password 





mysql>  CREATE USER 'example_user2'@'%' IDENTIFIED WITH mysql_native_password BY 'password';   GET A NEW PASSWORD 


mysql> GRANT ALL ON example_database.* TO 'example_user'@'%';  (give this example_user2  permission over the example_database database:)

Now exit the MySQL shell with:

mysql> exit


mysql -u example_user2 -p  (USE THE NEW USER PASS CREATED RECENTLY AND LOG IN AGAIN )


mysql> SHOW DATABASES;   (to show the database format being used )

Input in mysql all the details needed in the datbase todo-list

mysql> SHOW DATABASES;


INPUT ALL values and data 
mysql> INSERT INTO example_database.todo_list (content) VALUES ("My first important item");


mysql>  SELECT * FROM example_database.todo_list;   (The table is displayed )

Now exit the MySQL shell with:

mysql> exit

vim /var/www/projectLEMP/todo_list.php  (to input all data given)

After  saving and closing we visint the public address 
http://<Public_domain_or_IP>/todo_list.php


Then the final page is displayed 

Due to the lenghty task and took me hours i had to change IPV4 to finally get things sorted
http://3.86.42.22/todo_list.php

http://3.90.229.187/todo_list.php


http://<Public_domain_or_IP>/todo_list.php




















